---

#################  Add installer reposotory #######################
# Add Jenkins repository key
- name: Add jenkins apt-key
  sudo: yes
  action: apt_key url={{ jenkins.deb.key }} state=present

# Add Jenkins repository
- name: Add Jenkins repository
  sudo: yes
  action: apt_repository repo='{{ jenkins.deb.repo }}' state=present


####################### Install Jenkins dependencies ################
- name: Install dependencies
  sudo: yes
  action: "{{ ansible_pkg_mgr }} pkg={{ item }} state=installed update-cache=yes"
  with_items: jenkins.deb.dependencies



#######################       Install Jenkins      ##################
- name: Install Jenkins
  sudo: yes
  action: "{{ ansible_pkg_mgr }} pkg=jenkins state=latest update-cache=yes"
  register: jenkins_install


#######################     Install Jenkins cli   #####################
# Handle plugins
# If Jenkins is installed or updated, wait for pulling the Jenkins CLI
- name: "{{ startup_delay_s | default(10) }}s delay while starting Jenkins"
  wait_for: port=8080 delay={{ startup_delay_s | default(10) }}
  when: jenkins_install.changed

# Create Jenkins CLI destination directory
- name: "Create Jenkins CLI destination directory: {{ jenkins_dest }}"
  sudo: yes
  action: file path={{ jenkins_dest }} state=directory

# Get Jenkins CLI from localhost
- name: Get Jenkins CLI
  sudo: yes
  action: get_url url=http://{{ jenkins_host }}:8080/jnlpJars/jenkins-cli.jar dest={{ jenkins.cli_dest }} mode=0440

# Get latest Jenkins update file
- name: Get Jenkins updates
  sudo: yes
  action: get_url url=http://updates.jenkins-ci.org/update-center.json dest={{ jenkins.updates_dest }} thirsty=yes mode=0440
  register: jenkins_updates

# Jenkins Update-center
- name: Update-center Jenkins
  sudo: yes
  action: "shell cat {{ jenkins.updates_dest }} | sed '1d;$d' | curl -X POST -H 'Accept: application/json' -d @- http://{{ jenkins_host }}:8080/updateCenter/byId/default/postBack"
  when: jenkins_updates.changed
  notify:
    - 'Restart Jenkins'


###################### Install/update Jenkins plugins   ###############################
- name: List plugins
  sudo: yes
  action: shell java -jar {{ jenkins.cli_dest }} -s http://{{ jenkins_host }}:8080 list-plugins | cut -f 1 -d ' '
  when: plugins is defined
  register: plugins_installed

# Install/update Jenkins plugins
- name: Install/update plugins
  sudo: yes
  action: command java -jar {{ jenkins.cli_dest }} -s http://{{ jenkins_host }}:8080 install-plugin {{ item }}
  when: plugins_installed.changed and plugins_installed.stdout.find('{{ item }}') == -1
  with_items: plugins
  notify:
    - 'Restart Jenkins'

- name: List plugins to be updated
  sudo: yes
  action: shell java -jar {{ jenkins.cli_dest }} -s http://{{ jenkins_host }}:8080 list-plugins | grep ')$' | cut -f 1 -d ' ' | sed ':a;N;$!ba;s/\n/ /g'
  register: plugins_updates

- name: Update plugins
  sudo: yes
  action: command java -jar {{ jenkins.cli_dest }} -s http://{{ jenkins_host }}:8080 install-plugin {{ plugins_updates.stdout }}
  when: plugins_updates.stdout != ''
  notify:
    - 'Restart Jenkins'
